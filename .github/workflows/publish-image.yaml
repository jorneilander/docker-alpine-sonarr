---
name: Publish Sonarr

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"

jobs:
  lint_repository:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        continue-on-error: true

  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and publish
        id: vars
        run: |
          set -e
          ALPINE_VERSION="latest"
          IMAGE_NAME=failfr8er/sonarr
          SONARR_RAW=$(curl -s -H "Accept: application/json" https://services.sonarr.tv/v1/download/phantom-develop\?version\=3)
          SONARR_ASSET=$(echo "${SONARR_RAW}" | jq -r '.linux.manual.url')

          echo ::set-output name=SONARR_VERSION::${SONARR_VERSION}
          # Set Sonarr version
          SONARR_VERSION=$(jq -r '.version' <<< "${SONARR_RAW}")
          SONARR_VERSION_MAJOR="${SONARR_VERSION%%.*}"
          SONARR_VERSION_MINOR="${SONARR_VERSION%.*.*}"

          wget "${SONARR_ASSET}"

          docker buildx build \
            --file Dockerfile \
            --cache-from=type=local,src=/tmp/.buildx-cache \
            --cache-to=type=local,dest=/tmp/.buildx-cache \
            --tag ${IMAGE_NAME}:latest \
            --push \
            --build-arg ALPINE_VERSION=${ALPINE_VERSION} \
            --build-arg SONARR_VERSION="${SONARR_VERSION}" \
            --platform=linux/amd64 \
            --tag "${IMAGE_NAME}:${SONARR_VERSION}" \
            --tag "${IMAGE_NAME}:${SONARR_VERSION_MAJOR}" \
            --tag "${IMAGE_NAME}:${SONARR_VERSION_MINOR}" \
            .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "failfr8er/sonarr:${{ steps.vars.outputs.SONARR_VERSION }}"
          format: 'table'
          exit-code: '0'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
